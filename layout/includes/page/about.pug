if site.data.about
  - let aboutData = site.data.about
  each item in aboutData
    - let subtitle = item.subtitle || config.subtitle
    - let avatarImg = item.avatarImg || theme.avatar.img
    - let aboutName = item.name || theme.author
    - let aboutDescription = item.description || config.description
    - let helloAbout = item.helloAbout
    - let avatarSkills = item.avatarSkills
    #about-page
      .author-box
        if avatarSkills
          .author-tag-left
            each item in avatarSkills.left
              span.author-tag=item
        .author-img
          img.no-lightbox(src=url_for(avatarImg) onerror=`this.onerror=null;this.src='` + url_for(theme.error_img.flink) + `'` alt="avatar")
        if avatarSkills
          .author-tag-right
            each item in avatarSkills.right
              span.author-tag=item
      p.p.center.logo.large ÂÖ≥‰∫éÊàë
      p.p.center.small=subtitle
      .author-content
        .author-content-item.myInfoAndSayHello
          .title1 ‰Ω†Â•ΩÔºåÂæàÈ´òÂÖ¥ËÆ§ËØÜ‰Ω†üëã
          .title2
            | ÊàëÂè´ 
            span.inline-word=aboutName
          .title1=aboutDescription
      .author-content
        .author-content-item.selfInfo.single
            - let { selfInfoTips1, selfInfoContentYear, selfInfoTips2, selfInfoContent2, selfInfoTips3, selfInfoContent3 } = item.selfInfo
            div
              span.selfInfo-title=selfInfoTips1
              |  
              span.selfInfo-content#selfInfo-content-year(style='color:#43a6c6')=selfInfoContentYear
            div
              span.selfInfo-title=selfInfoTips2
              |  
              span.selfInfo-content(style='color:#c69043')=selfInfoContent2
            div
              span.selfInfo-title=selfInfoTips3
              |  
              span.selfInfo-content(style='color:#b04fe6')=selfInfoContent3

        .aboutsiteTips.author-content-item
          - let { tips, title1, title2, word } = item.aboutsiteTips
          .author-content-item-tips= tips
          h2
            = title1
            br
            = title2
            .mask
              each wordItem, index in word
                if index < word.length - 2
                  span(class=(index === 0 ? 'first-tips' : ''))= wordItem
              span(data-up)= word[word.length - 2]
              |  
              span(data-show)= word[word.length - 1]
      
      .author-content
        .author-content-item.maxim
          - let {maxim_tips, maxim_top, maxim_bottom} = item.maxim
          .author-content-item-tips=maxim_tips
          span.maxim-title
            span(style='opacity:.6;margin-bottom:8px')=maxim_top
            |  
            span=maxim_bottom
        .author-content-item.buff
          .card-content
          - let {buff_tips, buff_top, buff_bottom} = item.buff
            .author-content-item-tips=buff_tips
            span.buff-title
              span(style='opacity:.6;margin-bottom:8px')=buff_top
              |  
              span=buff_bottom
          .card-background-icon
            i.anzhiyufont.anzhiyu-icon-dice-d20

      .hello-about
        .cursor(style='translate:none;rotate:none;scale:none;transform:translate(721px,180px)')
        .shapes
          .shape.shape-1(style='translate:none;rotate:none;scale:none;transform:translate(721px,180px)')
          .shape.shape-2(style='translate:none;rotate:none;scale:none;transform:translate(721px,180px)')
          .shape.shape-3(style='translate:none;rotate:none;scale:none;transform:translate(721px,180px)')
        .content
          h1=helloAbout

      if page.content
        .author-content
          .create-site-post.author-content-item.single
            != page.content


    script(src=url_for(theme.asset.countup_js))
    script(defer).
      function initAboutPage() {
        var pursuitInterval = null;
        pursuitInterval = setInterval(function () {
          const show = document.querySelector("span[data-show]");
          const next = show.nextElementSibling || document.querySelector(".first-tips");
          const up = document.querySelector("span[data-up]");

          if (up) {
            up.removeAttribute("data-up");
          }

          show.removeAttribute("data-show");
          show.setAttribute("data-up", "");

          next.setAttribute("data-show", "");
        }, 2000);

        document.addEventListener("pjax:send", function () {
          pursuitInterval && clearInterval(pursuitInterval);
        });

        var helloAboutEl = document.querySelector(".hello-about");
        helloAboutEl.addEventListener("mousemove", evt => {
          const mouseX = evt.offsetX;
          const mouseY = evt.offsetY;
          gsap.set(".cursor", {
            x: mouseX,
            y: mouseY,
          });

          gsap.to(".shape", {
            x: mouseX,
            y: mouseY,
            stagger: -0.1,
          });
        });
      }
      if (typeof gsap === "object") {
        initAboutPage()
      } else {
        getScript("!{url_for(theme.asset.gsap_js)}").then(initAboutPage);
      }